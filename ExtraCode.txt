/* map.on("load", async() => {
    var geojson = await getFlightData();


    //for (var key in data.states) {
    map.addSource("plane", {
            type: "geojson",
            data: geojson,
        })
        //}

    map.addLayer({
        "id": "icao",
        "type": "symbol",
        "source": "icao",
        "layout": {
            "icon-image": "planeMarker.png"
        }
    })
});

const update = setInterval(async() => {
    var data = await getFlightData(update);
    map.getSource("icao").setData(geojson)
}, 10000)

async function getFlightData(update) {
    try {
        var response = await fetch(url, { method: "GET" });
        var data = await response.json();
        for (var key in data.states) {
            icao = data.states[key][0];
            callsign = data.states[key][1]
            longitude = data.states[key][5];
            latitude = data.states[key][6];
            velocity = data.states[key][9];
            track = data.states[key][11];
            altitude = data.states[key][13];

            return {
                "type": "FeatureCollection",
                "features": {
                    "type": "Feature",
                    "geometry": {
                        'type': 'Point',
                        'coordinates': [longitude, latitude],
                        'track': track,
                        'velocity': velocity,
                        'altitude': altitude,
                    }
                }
            }
        };
    } catch (err) {
        if (updateSource) clearInterval(updateSource);
        throw new Error(err);
    }
} */







//Creating a HTML class for each graphic.
        var markerGraphic = document.createElement('div')
        markerGraphic.className = "marker";

        var graphic = new mapboxgl.Marker(markerGraphic)
            .setLngLat(graphic.getCoordinates())
            .setRotation(graphic.getTrack())
            //.setRotationAlignment('map')
            .addTo(map);
        currentMarkers.push(graphic);

        //console.log(graphic.longitude, ',', graphic.latitude);
        /* console.log(graphic.track, geojson.geometry.track); */